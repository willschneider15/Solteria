import type { Element, UpdateDiff } from "./index";
export declare class ReactDom {
    private static instance;
    private pendingUpdates;
    private _vdom;
    private _vdomRoot;
    private _renderFns;
    private _renderRootFn?;
    private _needsRenderRoot;
    private constructor();
    static getInstance(): ReactDom;
    clear(): void;
    onRender(viewId: number, fn: (data: Element) => void): void;
    onRenderRoot(fn: (data: Array<Element>) => void): void;
    commitUpdate(instanceId: number, updatePayload: UpdateDiff): void;
    commitTextUpdate(textInstanceId: number, newText: string): void;
    appendChildToContainer(child: Element): void;
    appendChild(parentId: number, child: Element): void;
    insertInContainerBefore(child: Element, beforeId: number): void;
    insertBefore(parentId: number, child: Element, beforeId: number): void;
    removeChild(parentId: number, childId: number): void;
    removeChildFromContainer(childId: number): void;
    _renderRoot(): void;
    private _render;
    private _saveToDom;
    private _removeFromDom;
}
//# sourceMappingURL=ReactDom.d.ts.map