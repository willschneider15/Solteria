"use strict";
/*
 * Copyright (C) 2023 Blue Coral, Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <https://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNftTokenAccountForMint = void 0;
const spl_token_1 = require("@solana/spl-token");
/**
 * Get the active NFT associated token account for the argued master mint public key
 * that has the token current in the balance.
 * @export
 * @param {Connection} connection
 * @param {PublicKey} mint
 * @returns {Promise<ProgramAccount<TokenAccount>>}
 */
async function getNftTokenAccountForMint(connection, mint) {
    const tokenAccounts = await connection.getProgramAccounts(spl_token_1.TOKEN_PROGRAM_ID, {
        filters: [
            { dataSize: spl_token_1.ACCOUNT_SIZE },
            {
                memcmp: {
                    offset: 0,
                    bytes: mint.toBase58(),
                },
            },
            {
                memcmp: {
                    offset: 64,
                    bytes: "2", // base-58 encoding of Buffer.from([1]) for a balance of 1
                },
            },
        ],
    });
    if (tokenAccounts.length === 0) {
        throw new Error(`no token accounts found for mint ${mint.toBase58()}`);
    }
    const ata = spl_token_1.AccountLayout.decode(tokenAccounts[0].account.data);
    return {
        account: ata,
        publicKey: tokenAccounts[0].pubkey,
    };
}
exports.getNftTokenAccountForMint = getNftTokenAccountForMint;
//# sourceMappingURL=tokens.js.map